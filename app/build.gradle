apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion as int
    defaultConfig {
        applicationId "com.xinshang.audient"
        minSdkVersion rootProject.ext.minSdkVersion as int
        targetSdkVersion rootProject.ext.targetSdkVersion as int
        versionCode 1000
        versionName "1.0.00"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

       // multiDexEnabled true
    }

    //签名配置
    signingConfigs {
        release {
            storeFile file(STORE_FILE_PATH)
            storePassword STORE_PASSWORD
            keyAlias KEY_ALIAS
            keyPassword KEY_PASSWORD
        }

        debug {
            storeFile file(STORE_FILE_PATH)
            storePassword STORE_PASSWORD
            keyAlias KEY_ALIAS
            keyPassword KEY_PASSWORD
        }
    }

    buildTypes {
        debug {
            // 显示Log
            buildConfigField "boolean", "LOG_DEBUG", "true"
            //不去除无用代码
            minifyEnabled false
            //不进行对齐
            zipAlignEnabled false
            //不去除无用资源
            shrinkResources false
            signingConfig signingConfigs.debug
        }

        release {
            // 不显示Log
            buildConfigField "boolean", "LOG_DEBUG", "false"
            // 去除无用代码
            minifyEnabled true
            // 进行对齐
            zipAlignEnabled true
            // 移除无用的资源
            shrinkResources true
            // 配置混淆
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            // 配置签名
            signingConfig signingConfigs.release
        }

        android.applicationVariants.all { variant ->
            variant.outputs.all {
                outputFileName = "Audient_v${defaultConfig.versionName}.apk"
            }
        }
    }

    lintOptions {
        disable "InvalidPackage"
        abortOnError false
        lintConfig file("lint.xml")
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "com.android.support:appcompat-v7:$rootProject.ext.support_version"
    implementation "com.android.support:design:$rootProject.ext.support_version"
    implementation "com.android.support:recyclerview-v7:$rootProject.ext.support_version"
    implementation "com.android.support:cardview-v7:$rootProject.ext.support_version"
    implementation "com.android.support.constraint:constraint-layout:$rootProject.ext.constraint_version"
   // implementation "com.android.support:multidex:$rootProject.ext.multidex_version"

    implementation "com.jakewharton:butterknife:$rootProject.ext.butterknife_version"
    annotationProcessor "com.jakewharton:butterknife-compiler:$rootProject.ext.butterknife_version"
    implementation "io.reactivex.rxjava2:rxandroid:$rootProject.ext.rxandroid_version"
    implementation "io.reactivex.rxjava2:rxjava:$rootProject.ext.rxjava_version"
    implementation "com.github.bumptech.glide:glide:$rootProject.ext.glide_version"
    annotationProcessor "com.github.bumptech.glide:compiler:$rootProject.ext.glide_version"
    implementation("com.github.bumptech.glide:recyclerview-integration:$rootProject.ext.glide_version") {
        // Excludes the support library because it's already included by Glide.
        transitive = false
    }
    implementation("com.github.bumptech.glide:okhttp3-integration:$rootProject.ext.glide_version") {
        transitive = false
    }
    //dagger2
    implementation "com.google.dagger:dagger:$rootProject.ext.dagger_version"
    annotationProcessor "com.google.dagger:dagger-compiler:$rootProject.ext.dagger_version"
    //retrofit
    implementation "com.squareup.retrofit2:retrofit:$rootProject.ext.retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$rootProject.ext.retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$rootProject.ext.retrofit_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$rootProject.ext.interceptor_version"
    implementation "org.greenrobot:eventbus:$rootProject.ext.eventbus_version"
    //PagingLibrary
    implementation "android.arch.paging:runtime:$rootProject.ext.paging_version"
    //WeChat
    implementation "com.tencent.mm.opensdk:wechat-sdk-android-without-mta:$rootProject.ext.wechat_sdk_version"
    //leakcanary
    debugCompile "com.squareup.leakcanary:leakcanary-android:$rootProject.ext.leakcanary_version"
    releaseCompile "com.squareup.leakcanary:leakcanary-android-no-op:$rootProject.ext.leakcanary_version"
    implementation project(':common')
    implementation project(':model')
    implementation project(':blurlibrary')

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
}
