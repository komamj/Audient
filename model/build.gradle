apply plugin: 'com.android.library'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion as int

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion as int
        targetSdkVersion rootProject.ext.targetSdkVersion as int
        versionCode 1
        versionName "1.0"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    //签名配置
    signingConfigs {
        release {
            storeFile file(STORE_FILE_PATH)
            storePassword STORE_PASSWORD
            keyAlias KEY_ALIAS
            keyPassword KEY_PASSWORD
        }
    }

    buildTypes {
        debug {
            // 显示Log
            buildConfigField "boolean", "LOG_DEBUG", "true"
            //不去除无用代码
            minifyEnabled false
            //不进行对齐
            zipAlignEnabled false
            //不去除无用资源
            shrinkResources false
        }

        release {
            // 不显示Log
            buildConfigField "boolean", "LOG_DEBUG", "true"
            // 去除无用代码
            minifyEnabled true
            // 进行对齐
            zipAlignEnabled true
            // 移除无用的资源
            shrinkResources false
            // 配置混淆
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            // 配置签名
            signingConfig signingConfigs.release
        }

        lintOptions {
            disable "InvalidPackage"
            abortOnError false
            lintConfig file("lint.xml")
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    //kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "com.android.support:appcompat-v7:$rootProject.ext.support_version"
    //dagger2
    implementation "com.google.dagger:dagger:$rootProject.ext.dagger_version"
    kapt "com.google.dagger:dagger-compiler:$rootProject.ext.dagger_version"

    //rxjava
    implementation "io.reactivex.rxjava2:rxjava:$rootProject.ext.rxjava_version"

    //room
    implementation "android.arch.persistence.room:runtime:$rootProject.room_version"
    kapt "android.arch.persistence.room:compiler:$rootProject.room_version"

    //retrofit
    implementation "com.squareup.retrofit2:retrofit:$rootProject.ext.retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$rootProject.ext.retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$rootProject.ext.retrofit_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$rootProject.ext.interceptor_version"
    //WeChat
    implementation "com.tencent.mm.opensdk:wechat-sdk-android-without-mta:$rootProject.ext.wechat_sdk_version"
    implementation project(':common')

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
}
