apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion as int

    defaultConfig {
        applicationId "com.xinshang.store"
        minSdkVersion rootProject.ext.minSdkVersion as int
        targetSdkVersion rootProject.ext.targetSdkVersion as int
        versionCode 1000
        versionName "1.0.00"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    //签名配置
    signingConfigs {
        release {
            storeFile file(STORE_FILE_PATH)
            storePassword STORE_PASSWORD
            keyAlias KEY_ALIAS
            keyPassword KEY_PASSWORD
        }
    }

    buildTypes {
        debug {
            buildConfigField 'String', 'ENDPOINT', "\"http://101.132.122.196:8080/\""
            buildConfigField 'String', 'WEBSOCKET_ENDPOINT', "\"ws://101.132.122.196:8080/ws/client\""
            // 显示Log
            buildConfigField "boolean", "LOG_DEBUG", "true"
            //不去除无用代码
            minifyEnabled false
            //不进行对齐
            zipAlignEnabled false
            //不去除无用资源
            shrinkResources false
        }

        release {
            buildConfigField 'String', 'ENDPOINT', "\"http://193.112.0.111:80/\""
            buildConfigField 'String', 'WEBSOCKET_ENDPOINT', "\"ws://193.112.0.111:80/ws/client\""
            // 不显示Log
            buildConfigField "boolean", "LOG_DEBUG", "false"
            // 去除无用代码
            minifyEnabled true
            // 进行对齐
            zipAlignEnabled true
            // 移除无用的资源
            shrinkResources true
            // 配置混淆
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            // 配置签名
            signingConfig signingConfigs.release
        }

        android.applicationVariants.all { variant ->
            variant.outputs.all {
                outputFileName = "Store_v${defaultConfig.versionName}.apk"
            }
        }
    }
}
dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    //kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "com.android.support:appcompat-v7:$rootProject.ext.support_version"
    implementation "com.android.support:design:$rootProject.ext.support_version"
    implementation "com.android.support:recyclerview-v7:$rootProject.ext.support_version"
    implementation "com.android.support:cardview-v7:$rootProject.ext.support_version"
    implementation "com.android.support.constraint:constraint-layout:$constraint_version"
    implementation "com.mikhaellopez:circularprogressbar:$circularprogressbar_version"

    implementation "com.jakewharton:butterknife:$butterknife_version"
    kapt "com.jakewharton:butterknife-compiler:$butterknife_version"
    implementation "io.reactivex.rxjava2:rxandroid:$rxandroid_version"
    implementation "io.reactivex.rxjava2:rxjava:$rxjava_version"
    implementation "com.github.bumptech.glide:glide:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"
    implementation("com.github.bumptech.glide:recyclerview-integration:$glide_version") {
        // Excludes the support library because it's already included by Glide.
        transitive = false
    }
    implementation("com.github.bumptech.glide:okhttp3-integration:$glide_version") {
        transitive = false
    }
    //dagger2
    implementation "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    //room
    implementation "android.arch.persistence.room:runtime:$room_version"
    kapt "android.arch.persistence.room:compiler:$room_version"
    //retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$interceptor_version"
    implementation "org.greenrobot:eventbus:$eventbus_version"
    //leakcanary
    debugImplementation "com.squareup.leakcanary:leakcanary-android:$leakcanary_version"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$leakcanary_version"

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}
